---
export interface Props {
  id: string;
  title: string;
  isOpen?: boolean;
  variant?: 'default' | 'primary' | 'secondary';
}

const { id, title, isOpen = false, variant = 'default' } = Astro.props;
---

<div class={`accordion ${variant}`}>
  <button
    class="accordion-header"
    type="button"
    aria-expanded={isOpen}
    aria-controls={`${id}-content`}
    data-accordion-trigger={id}
  >
    <span class="accordion-title">{title}</span>
    <svg
      class="accordion-icon"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <polyline points="6,9 12,15 18,9"></polyline>
    </svg>
  </button>
  <div
    class="accordion-content"
    id={`${id}-content`}
    aria-labelledby={`${id}-header`}
    data-accordion-content={id}
    style={isOpen ? '' : 'display: none;'}
  >
    <div class="accordion-body">
      <slot />
    </div>
  </div>
</div>

<style>
  .accordion {
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    margin-bottom: 8px;
    background: white;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .accordion-header {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 16px 20px;
    background: #f9fafb;
    border: none;
    cursor: pointer;
    text-align: left;
    font-weight: 500;
    font-size: 1rem;
    color: #374151;
    transition: all 0.2s ease;
    border-bottom: 1px solid #e5e7eb;
  }

  .accordion-header:hover {
    background: #f3f4f6;
  }

  .accordion-header:focus {
    outline: 2px solid #3b82f6;
    outline-offset: -2px;
  }

  .accordion-header[aria-expanded="true"] {
    background: #f9fafb;
    color: #111827;
  }

  .accordion-title {
    flex: 1;
    font-weight: 500;
  }

  .accordion-icon {
    flex-shrink: 0;
    margin-left: 12px;
    transition: transform 0.2s ease;
    color: #6b7280;
    width: 16px;
    height: 16px;
  }

  .accordion-header[aria-expanded="true"] .accordion-icon {
    transform: rotate(180deg);
  }

  .accordion-content {
    background: white;
    transition: all 0.3s ease;
  }

  .accordion-body {
    padding: 20px;
    color: #374151;
    line-height: 1.6;
  }

  .accordion-body :global(h2) {
    margin-top: 0;
    margin-bottom: 16px;
    color: #111827;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .accordion-body :global(h3) {
    margin-top: 20px;
    margin-bottom: 12px;
    color: #374151;
    font-size: 1.125rem;
    font-weight: 600;
  }

  .accordion-body :global(h4) {
    margin-top: 16px;
    margin-bottom: 10px;
    color: #4b5563;
    font-size: 1rem;
    font-weight: 600;
  }

  .accordion-body :global(p) {
    margin-bottom: 16px;
    font-size: 0.95rem;
    line-height: 1.6;
  }

  .accordion-body :global(ul),
  .accordion-body :global(ol) {
    margin-bottom: 16px;
    padding-left: 20px;
  }

  .accordion-body :global(li) {
    margin-bottom: 6px;
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .accordion-body :global(strong) {
    color: #111827;
    font-weight: 600;
  }

  .accordion-body :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    overflow: hidden;
    font-size: 0.9rem;
  }

  .accordion-body :global(th),
  .accordion-body :global(td) {
    padding: 10px 12px;
    text-align: left;
    border-bottom: 1px solid #f3f4f6;
  }

  .accordion-body :global(th) {
    background: #f9fafb;
    font-weight: 600;
    color: #111827;
  }

  .accordion-body :global(blockquote) {
    border-left: 3px solid #3b82f6;
    padding: 12px 16px;
    margin: 20px 0;
    background: #f8fafc;
    border-radius: 0 6px 6px 0;
    font-style: italic;
    color: #4b5563;
    font-size: 0.95rem;
  }

  @media (max-width: 768px) {
    .accordion {
      margin-bottom: 6px;
    }

    .accordion-header {
      padding: 14px 16px;
      font-size: 0.95rem;
    }

    .accordion-body {
      padding: 16px;
    }

    .accordion-body :global(p),
    .accordion-body :global(li) {
      font-size: 0.9rem;
    }
  }
</style>

<script>
  // Add accordion functionality
  document.addEventListener('DOMContentLoaded', () => {
    const accordionTriggers = document.querySelectorAll('[data-accordion-trigger]');
    
    accordionTriggers.forEach(trigger => {
      trigger.addEventListener('click', () => {
        const id = trigger.getAttribute('data-accordion-trigger');
        const content = document.querySelector(`[data-accordion-content="${id}"]`);
        const isExpanded = trigger.getAttribute('aria-expanded') === 'true';
        
        // Toggle the current accordion
        trigger.setAttribute('aria-expanded', (!isExpanded).toString());
        
        if (content) {
          if (isExpanded) {
            content.style.display = 'none';
          } else {
            content.style.display = 'block';
          }
        }
      });
    });
  });
</script>