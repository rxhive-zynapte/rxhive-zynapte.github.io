---
export interface Props {
  // When true the Overview card uses the primary (blue) highlight styling.
  // Set to false to render a neutral (non-blue) overview card.
  primaryOverview?: boolean;
}
---

<div class="drug-content-wrapper">
  <!-- Overview Card -->
  <div class={"content-card" + (Astro.props.primaryOverview === false ? "" : " primary")}>
    <div class="card-header">
      <h2 class="card-title">Overview</h2>
    </div>
    <div class="card-body">
      <div id="overview-content" class="card-content-section">
        <!-- Overview, Usage, Alternate Names will go here -->
      </div>
    </div>
  </div>

  <!-- Medical Information Card -->
  <div class="content-card">
    <div class="card-header">
      <h2 class="card-title">Medical Information</h2>
    </div>
    <div class="card-body">
      <div id="medical-info-content" class="card-content-section">
        <!-- How It Works, Pharmacology, Mechanism -->
      </div>
    </div>
  </div>

  <!-- Dosage Card -->
  <div class="content-card">
    <div class="card-header">
      <h2 class="card-title">Dosage Information</h2>
    </div>
    <div class="card-body">
      <div id="dosage-content" class="card-content-section">
        <!-- Standard dose, pediatric dose, adjustments -->
      </div>
    </div>
  </div>

  <!-- Side Effects Card -->
  <div class="content-card">
    <div class="card-header">
      <h2 class="card-title">Side Effects</h2>
    </div>
    <div class="card-body">
      <div id="side-effects-content" class="card-content-section">
        <!-- Common, serious, long-term effects -->
      </div>
    </div>
  </div>

  <!-- Safety Card -->
  <div class="content-card">
    <div class="card-header">
      <h2 class="card-title">Safety Information</h2>
    </div>
    <div class="card-body">
      <div id="safety-content" class="card-content-section">
        <!-- Contraindications, Drug Interactions, Pregnancy & Breastfeeding -->
      </div>
    </div>
  </div>

  <!-- Reference Card -->
  <div class="content-card">
    <div class="card-header">
      <h2 class="card-title">Reference Information</h2>
    </div>
    <div class="card-body">
      <div id="reference-content" class="card-content-section">
        <!-- Drug Profile Summary, Precautions, Monitoring Parameters, Popular Combinations -->
      </div>
    </div>
  </div>

  <!-- Hidden container -->
  <div id="original-content" style="display: none;">
    <slot />
  </div>
</div>

<style>
  .drug-content-wrapper {
    margin: 24px 0;
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .content-card {
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 12px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    transition: box-shadow 0.2s ease;
    /* Initially hide cards to prevent layout shifts */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease, box-shadow 0.2s ease;
  }

  .content-card.has-content {
    opacity: 1;
    visibility: visible;
  }

  .content-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
  }

  .content-card.primary {
    border-color: #3b82f6;
    border-width: 2px;
  }

  .card-header {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    padding: 20px 24px;
    border-bottom: 1px solid #e5e7eb;
  }

  .content-card.primary .card-header {
    background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    border-bottom-color: #3b82f6;
  }

  .card-title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
  }

  .content-card.primary .card-title {
    color: #1e40af;
  }

  .card-body {
    padding: 24px;
  }

  .card-content-section :global(h2:first-child) {
    margin-top: 0;
  }

  .card-content-section :global(h2) {
    color: #1e293b;
    font-weight: 600;
    margin: 32px 0 16px;
    font-size: 1.5rem;
    padding-bottom: 8px;
    border-bottom: 2px solid rgba(99, 102, 241, 0.1);
  }

  .card-content-section :global(h3) {
    color: #374151;
    font-weight: 600;
    margin: 24px 0 12px;
    font-size: 1.25rem;
  }

  .card-content-section :global(h4) {
    color: #4b5563;
    font-weight: 600;
    margin: 20px 0 10px;
    font-size: 1.1rem;
  }

  .card-content-section :global(p) {
    margin: 0 0 16px;
    line-height: 1.7;
    color: #374151;
  }

  .card-content-section :global(ul),
  .card-content-section :global(ol) {
    margin: 0 0 16px;
    padding-left: 24px;
  }

  .card-content-section :global(li) {
    margin-bottom: 8px;
    line-height: 1.6;
    color: #374151;
  }

  .card-content-section :global(strong) {
    color: #1e293b;
    font-weight: 600;
  }

  .card-content-section :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 24px 0;
    border: 1px solid rgba(226,232,240,0.8);
    border-radius: 8px;
    overflow: hidden;
  }

  .card-content-section :global(th),
  .card-content-section :global(td) {
    padding: 12px 16px;
    text-align: left;
    border-bottom: 1px solid rgba(226,232,240,0.6);
  }

  .card-content-section :global(th) {
    background: rgba(248,250,252,0.8);
    font-weight: 600;
    color: #1e293b;
  }

  .card-content-section :global(blockquote) {
    border-left: 4px solid rgba(99,102,241,0.3);
    padding: 16px 24px;
    margin: 24px 0;
    background: rgba(248,250,252,0.5);
    border-radius: 0 8px 8px 0;
    font-style: italic;
    color: #4b5563;
  }

  /* Hide empty cards */
  .content-card:has(.card-content-section:empty) {
    display: none;
  }

  @media (max-width: 768px) {
    .drug-content-wrapper {
      margin: 16px 0;
      gap: 16px;
    }

    .card-header {
      padding: 16px 20px;
    }

    .card-title {
      font-size: 1.125rem;
    }

    .card-body {
      padding: 20px;
    }

    .content-card {
      border-radius: 8px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    organizeContentIntoCards();
  });

  function organizeContentIntoCards() {
    const originalContent = document.getElementById('original-content');
    if (!originalContent) return;

    const h2Elements = originalContent.querySelectorAll('h2');
    const sections = [];

    h2Elements.forEach((h2, index) => {
      const section = { heading: h2, content: [] };
      let nextSibling = h2.nextElementSibling;
      const nextH2 = h2Elements[index + 1];

      while (nextSibling && nextSibling !== nextH2) {
        section.content.push(nextSibling);
        nextSibling = nextSibling.nextElementSibling;
      }

      sections.push(section);
    });

    // Map sections to cards
    const sectionMapping = {
      'Usage': 'overview-content',
      'Alternate Names': 'overview-content',
      'How It Works': 'medical-info-content',
      'Pharmacological Classification': 'medical-info-content',
      'Dosage': 'dosage-content',
      'Side Effects': 'side-effects-content',
      'Contraindications': 'safety-content',
      'Drug Interactions': 'safety-content',
      'Pregnancy and Breastfeeding': 'safety-content',
      'Precautions': 'reference-content',
      'Monitoring Parameters': 'reference-content',
      'Drug Profile Summary': 'reference-content',
      'Popular Combinations': 'reference-content'
    };

    sections.forEach(section => {
      const headingText = section.heading.textContent.trim();
      const targetId = sectionMapping[headingText];
      if (targetId) {
        const targetContainer = document.getElementById(targetId);
        if (targetContainer) {
          targetContainer.appendChild(section.heading.cloneNode(true));
          section.content.forEach(el => targetContainer.appendChild(el.cloneNode(true)));
          // Mark card as having content to make it visible
          const card = targetContainer.closest('.content-card');
          if (card) card.classList.add('has-content');
        }
      }
    });

    // Hide empty cards and ensure visible cards are marked
    Object.values(sectionMapping).forEach(containerId => {
      const container = document.getElementById(containerId);
      const card = container?.closest('.content-card');
      if (container && container.children.length === 0) {
        if (card) card.style.display = 'none';
      } else if (card) {
        card.classList.add('has-content');
      }
    });

    originalContent.style.display = 'none';
  }
</script>
