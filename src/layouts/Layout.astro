---
import SearchBar from '../components/SearchBar.astro';
import logoLight from '../assets/zynapte-rxhive-logo-light.png';
import logoDark from '../assets/zynapte-rxhive-logo-dark.png';

const { isHomePage = false } = Astro.props;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1" />
		
		<!-- Favicon and app icons for better browser compatibility -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/site.webmanifest" />
		
		<meta name="generator" content={Astro.generator} />
		{/** Use a dynamic title and description when provided via props, fallback to site */}
		<title>{Astro.props.title || 'RxHive'}</title>
		<meta name="description" content={Astro.props.description || ''} />
		{/** canonical using Astro.site + pathname when available */}
		{Astro.site ? <link rel="canonical" href={`${Astro.site}${Astro.url.pathname}`} /> : null}

			{/** Robots meta */}
			<meta name="robots" content="index, follow" />

			{/* allow pages to inject head-only fragments like JSON-LD via a named slot */}
			{Astro.slots.head ? <slot name="head" /> : null}

			{/** Open Graph / Twitter */}
			<meta property="og:type" content="website" />
			<meta property="og:title" content={Astro.props.title || 'RxHive'} />
			<meta property="og:description" content={Astro.props.description || ''} />
			{Astro.site ? <meta property="og:url" content={`${Astro.site}${Astro.url.pathname}`} /> : null}
			<meta name="twitter:card" content="summary_large_image" />
			<meta name="twitter:title" content={Astro.props.title || 'RxHive'} />
			<meta name="twitter:description" content={Astro.props.description || ''} />
			<meta name="theme-color" content="#ffffff" />

			<!-- Google tag (gtag.js) -->
			<script async src="https://www.googletagmanager.com/gtag/js?id=G-JMBXT0N7K0"></script>
			<script>
			  window.dataLayer = window.dataLayer || [];
			  function gtag(){dataLayer.push(arguments);}
			  gtag('js', new Date());

			  gtag('config', 'G-JMBXT0N7K0');
			</script>
		
			<!-- Inline critical CSS for faster rendering -->
			<style>
				/* Critical CSS - Basic layout and typography */
				html,body{margin:0;width:100%;height:100%;background:radial-gradient(1200px 600px at 10% 10%,rgba(99,102,241,0.06),transparent 10%),linear-gradient(180deg,rgba(59,130,246,0.02),rgba(236,72,153,0.02))}
				h1{font-size:1.875rem;line-height:1.2;margin:0 0 0.5rem}h2{font-size:1.25rem;line-height:1.3;margin:0 0 0.5rem}h3{font-size:1rem;line-height:1.4;margin:0 0 0.5rem}
				.container{max-width:1100px;margin:0 auto;padding:28px 20px}
				:root{--header-height:64px}
				.site-header{background:rgba(15,23,42,0.95);backdrop-filter:blur(12px);color:#fff;min-height:var(--header-height);position:sticky;top:0;z-index:100;border-bottom:1px solid rgba(148,163,184,0.2);padding:10px 0}
				.site-header .container{padding-top:18px;padding-bottom:18px}
				.header-inner{display:flex;align-items:center;justify-content:space-between;gap:18px}
				.brand{display:flex;align-items:center;text-decoration:none;transition:opacity 0.2s ease}
				.brand:hover{opacity:0.8}
				.brand-logo{height:40px;width:auto;object-fit:contain}
				.brand-logo--dark{display:block}.brand-logo--light{display:none}
				@media (prefers-color-scheme:dark){.brand-logo--dark{display:none}.brand-logo--light{display:block}}
				
				/* Critical search styles for immediate layout */
				.search-shell{position:relative;width:100%}
				.search-inline{display:flex;align-items:center;width:100%;max-width:600px;gap:12px;padding:16px 24px;border-radius:999px;border:1px solid rgba(148,163,184,0.3);background:rgba(255,255,255,0.95);box-shadow:0 4px 12px rgba(15,23,42,0.08);margin:0 auto;cursor:pointer}
				.search-inline__icon{display:inline-flex;width:1.2rem;height:1.2rem;color:rgba(99,102,241,0.7)}
				.search-inline__icon svg{display:block;width:100%;height:100%}
				.search-inline__input{flex:1;border:none;background:transparent;color:#1e293b;font-size:1rem;outline:none;font-weight:500}
				.search-inline__input::placeholder{color:rgba(100,116,139,0.8);font-weight:400}
				.search-modal{position:fixed;inset:0;z-index:999;opacity:0;visibility:hidden}
				.search-modal[hidden]{display:none}
				
				/* Critical page layout */
				.main--home{background:linear-gradient(135deg,rgba(59,130,246,0.03),rgba(147,51,234,0.03),rgba(236,72,153,0.03));padding:0;min-height:100vh}
				img{max-width:100%;height:auto;display:block}
				.page-grid{display:grid;grid-template-columns:1fr;gap:24px;align-items:start}
				.content-column{padding:12px 0}
				.sr-only{position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}
				@media (max-width:640px){.search-inline{max-width:100%;padding:14px 20px;margin:0}}
			</style>

			<!-- Load non-critical CSS asynchronously -->
			<script>
				// Dynamically load non-critical CSS after page load
				window.addEventListener('load', function() {
					const links = document.querySelectorAll('link[rel="stylesheet"]:not([data-critical])');
					links.forEach(link => {
						const href = link.href;
						link.remove();
						const newLink = document.createElement('link');
						newLink.rel = 'stylesheet';
						newLink.href = href;
						document.head.appendChild(newLink);
					});
				});
			</script>
				.sr-only{position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}
			</style>
	</head>

	<body>
		<!-- Keep skip link for accessibility but hide visible text -->
		<a href="#content" class="skip-to-content sr-only">Skip to content</a>

		{!isHomePage && (
			<header class="site-header">
				<div class="container header-inner">
					<a href="/" class="brand">
						<img src={logoLight.src} alt="Zynapte RxHive" class="brand-logo brand-logo--light" />
						<img src={logoDark.src} alt="Zynapte RxHive" class="brand-logo brand-logo--dark" />
					</a>
					<div class="header-search">
						<SearchBar />
					</div>
				</div>
			</header>
		)}

		<main id="content" class={isHomePage ? 'main--home' : ''}>
			{isHomePage ? (
				<slot />
			) : (
				<div class="container page-grid">
					<section class="content-column">
						<slot />
					</section>
				</div>
			)}
		</main>

		<footer class="site-footer">
			<div class="container">
				<div>Â© {new Date().getFullYear()} RxHive</div>
				<nav>
					<a href="/sitemap.xml">Sitemap</a>
				</nav>
			</div>
		</footer>
		
		<!-- Load non-critical CSS asynchronously -->
		<script>
			const loadCSS = function(href, before, media) {
				var doc = window.document;
				var ss = doc.createElement("link");
				var ref;
				if (before) {
					ref = before;
				} else {
					var refs = (doc.body || doc.getElementsByTagName("head")[0]).childNodes;
					ref = refs[refs.length - 1];
				}
				var sheets = doc.styleSheets;
				ss.rel = "stylesheet";
				ss.href = href;
				ss.media = "only x";
				function ready(cb) {
					if (doc.body) {
						return cb();
					}
					setTimeout(function() {
						ready(cb);
					});
				}
				ready(function() {
					ref.parentNode.insertBefore(ss, (before ? ref : ref.nextSibling));
				});
				var onloadcssdefined = function(cb) {
					var resolvedHref = ss.href;
					var i = sheets.length;
					while (i--) {
						if (sheets[i].href === resolvedHref) {
							return cb();
						}
					}
					setTimeout(function() {
						onloadcssdefined(cb);
					});
				};
				function loadCB() {
					if (ss.addEventListener) {
						ss.removeEventListener("load", loadCB);
					}
					ss.media = media || "all";
				}
				if (ss.addEventListener) {
					ss.addEventListener("load", loadCB);
				}
				ss.onloadcssdefined = onloadcssdefined;
				onloadcssdefined(loadCB);
				return ss;
			};
		</script>
	</body>
</html>

<!-- Non-critical CSS styles - moved to end of body for deferred loading -->
<style>
	/* Layout and responsive styles */
	.header-inner:has(.header-search) {
		justify-content: space-between;
	}
	.header-inner:not(:has(.header-search)) {
		justify-content: center;
	}
	.header-search { 
		display: flex; 
		justify-content: center; 
		flex: 1;
		max-width: 400px;
	}
	.page-grid { display:grid; grid-template-columns: 1fr; gap: 24px; align-items:start; }
	.content-column { padding: 12px 0; }
	.main--home {
		background: linear-gradient(135deg, 
			rgba(59,130,246,0.03) 0%, 
			rgba(147,51,234,0.03) 50%, 
			rgba(236,72,153,0.03) 100%);
		padding: 0;
		min-height: 100vh;
	}
	img { max-width: 100%; height: auto; display: block; }
	article { background: #fff; border-radius: 12px; padding: 20px; box-shadow: 0 6px 18px rgba(15,23,42,0.06); }
	.card { background:#fff; padding:12px; border-radius:8px; box-shadow: 0 4px 12px rgba(2,6,23,0.04); margin-bottom:12px; }
	.site-footer { border-top:1px solid #e6eef8; margin-top:36px; padding:18px 0; color:#374151; }
	.site-footer a { color: #374151; text-decoration:none; margin-left:12px; }

	@media (max-width: 900px) {
		.header-search { max-width: 320px; }
		.page-grid { grid-template-columns: 1fr; }
		.sidebar { order: 2; }
		.header-inner {
			flex-direction: column;
			gap: 16px;
		}
		.header-inner:has(.header-search) {
			justify-content: center;
		}
	}

	@media (max-width: 640px) {
		.site-header .container { padding-top: 16px; padding-bottom: 16px; }
		.brand { font-size: 1.35rem; letter-spacing: 0.06em; }
		.header-search { max-width: 100%; }
	}
</style>
